<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
<!-- spring配置文件 -->

<!-- 开启扫描 -->
<context:component-scan base-package="com.guigu" >
	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
</context:component-scan>

	<!-- 引述数据库配置文件 -->
	<!-- 引入数据源 -->
<context:property-placeholder location="classpath:db.properties"/>
<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
	<property name="driverClass" value="${jdbc.driverClass}"></property>
	<property name="user" value="${jdbc.user}"></property>
	<property name="password" value="${jdbc.password}"></property>
</bean>

		<!-- 配置一个可以批量操作的Sqlsession -->
<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	<constructor-arg name="executorType" value="BATCH"></constructor-arg>
</bean>
		<!-- 配置spring和，mybatis整合 -->
<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 制定mybatis配置文件路径 -->
	<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	<property name="dataSource" ref="pooledDataSource"></property>
		<!-- 制定mybatis mapper文件的路径 -->
	<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
</bean>

	<!-- 配置扫描器,将mybatis接口实现加入IOC容器中 -->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<!-- 扫描dao中所有接口 -->
	<property name="basePackage" value="com.guigu.dao" ></property>
</bean>

<!-- 加入事务控制 -->
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<!-- 控制住数据源 -->
	<property name="dataSource" ref="pooledDataSource"></property>
</bean>

	<!-- 开启基于注解的事务 -->
	<!-- 使用xml配置形式事务 -->
<aop:config>
	<!-- 切入点表达式 -->
	<aop:pointcut expression="execution(* com.guigu.service..*(..))" id="txPoint"/>
	<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
</aop:config>

	<!-- 配置事务增强 、事务如何切入-->
<tx:advice id="txAdvice" transaction-manager="transactionManager">
	<tx:attributes>
		<!-- 所有方法都是事务方法 -->
		<tx:method name="*"/>
		<!--  -->
		<tx:method name="get*" read-only="true"/>
	</tx:attributes>
</tx:advice>

	<!-- spring配置文件核心点（数据源、spring与mybatis的整合、事务控制） -->
</beans>
